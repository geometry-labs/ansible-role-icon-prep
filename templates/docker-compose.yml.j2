version: '3'
services:

{% if reverse_proxy_type == 'nginx' and nginx_type == 'block42' %}

  nginx:
    depends_on:
      - prep
    image: 'nginx:1.17.3'
    container_name: 'nginx'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/access_lists/:/etc/nginx/access_lists/
      - ./nginx/log/:/var/log/nginx/

    ports:
      - 9000:9000
      - 7100:7100
    external_links:
      - prep
    restart: always

{% endif %}

  prep:
    image: {{ image }}

    container_name: 'prep-{{ network_name }}'
    environment: {% if network_name == 'mainnet' %}

      NETWORK_ENV: "mainnet"
      {% elif network_name == 'zicon' %}

      NETWORK_ENV: "PREP-TestNet"
      SWITCH_BH_VERSION4: 1587271
      CREP_ROOT_HASH: "0x9718f5d6d6ddb77f547ecc7113c8f1bad1bf46220512fbde356eee74a90ba47c"{% endif %}

      #LOOPCHAIN_LOG_LEVEL: "DEBUG"
      #ICON_LOG_LEVEL: "DEBUG"
      FASTEST_START: "yes"
      CERT_PATH: "/cert"
      #PRIVATE_KEY_FILENAME: "{{ keystore_path | basename }}"
      #PRIVATE_PASSWORD: "{{ keystore_password }}"
      {% if citizen_ip is defined %}ENDPOINT_URL: "{{ ("http://" + citizen_ip + ":9000") }}"{% endif %}

      # Logging
      GOLOOP_LOG_FORWARDER_ADDRESS: "{{ goloop_log_forwarder_address }}"
      GOLOOP_LOG_FORWARDER_LEVEL: "{{ goloop_log_forwarder_level }}"
      GOLOOP_LOG_FORWARDER_NAME: "{{ goloop_log_forwarder_name }}"
      GOLOOP_LOG_FORWARDER_OPTIONS: "{{ goloop_log_forwarder_options }}"
      GOLOOP_LOG_FORWARDER_VENDOR: "{{ goloop_log_forwarder_vendor }}"
      GOLOOP_LOG_LEVEL: "{{ goloop_log_level }}"
      GOLOOP_LOG_WRITER_COMPRESS: "{{ goloop_log_writer_compress }}"
      GOLOOP_LOG_WRITER_FILENAME: "{{ goloop_log_writer_filename }}"
      GOLOOP_LOG_WRITER_LOCALTIME: "{{ goloop_log_writer_localtime }}"
      GOLOOP_LOG_WRITER_MAXAGE: "{{ goloop_log_writer_maxage }}"
      GOLOOP_LOG_WRITER_MAXBACKUPS: "{{ goloop_log_writer_maxbackups }}"
      GOLOOP_LOG_WRITER_MAXSIZE: "{{ goloop_log_writer_maxsize }}"

      # Keys
      GOLOOP_KEY_PASSWORD: "{{ keystore_password }}"
      GOLOOP_KEY_PLUGIN: "{{ goloop_key_plugin }}"
      GOLOOP_KEY_PLUGIN_OPTIONS: "{{ goloop_key_plugin_options }}"
      GOLOOP_KEY_SECRET: "{{ goloop_key_secret }}"
      GOLOOP_KEY_STORE: "{{ keystore_path | basename }}"

      # Engine
      GOLOOP_BACKUP_DIR: "{{ goloop_backup_dir }}"
      GOLOOP_CONFIG: "{{ goloop_config }}"
      GOLOOP_CONSOLE_LEVEL: "{{ goloop_console_level }}"
      GOLOOP_EE_SOCKET: "{{ goloop_ee_socket }}"
      GOLOOP_ENGINES: "{{ goloop_engines }}"
      GOLOOP_NODE_DIR: "{{ goloop_node_dir }}"

      # Network
      GOLOOP_NODE_SOCK: "{{ goloop_node_sock }}"
      GOLOOP_P2P: "{{ goloop_p2p }}"
      GOLOOP_P2P_LISTEN: "{{ goloop_p2p_listen }}"
      GOLOOP_RPC_ADDR: "{{ goloop_rpc_addr }}"
      GOLOOP_RPC_DUMP: "{{ goloop_rpc_dump }}"

    cap_add:
      - SYS_TIME
    volumes:
      - ./data:/data
      - ./cert:/cert
    expose:
      - '9000'
      - '7100'
    restart: on-failure

{% if node_exporter_enabled %}

  node-exporter:
    image: bitnami/node-exporter:latest
    ports:
      - 9100:9100
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    depends_on:
      - prep
{% endif %}

{% if blackbox_exporter_enabled %}

  blackbox-exporter:
    image: bitnami/blackbox-exporter:latest
    ports:
      - 9115:9115
    volumes:
      - ./config-blackbox:/opt/bitnami/blackbox-exporter/conf
    restart: always
    # command: --config.file=/config/blackbox.yml
    depends_on:
      - prep

{% endif %}
{% if nginx_exporter_enabled %}

  nginx-exporter-jsonrpc:
    image: bitnami/nginx-exporter:latest
    ports:
      - 9113:9113
    network_mode: host
    restart: always
    depends_on:
      - prep
    entrypoint:
    - /usr/bin/exporter
    - -nginx.scrape-uri
    - http://localhost:9000/metrics

{% endif %}
{% if cadvisor_enabled %}

  cadvisor:
    image: google/cadvisor:latest
    privileged: true
    stdin_open: true

    container_name: cadvisor
    ports:
    - 8080:8080/tcp
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: "--enable_load_reader=true"
    depends_on:
      - prep

{% endif %}

